// Generated by Haxe 3.4.4
(function () { "use strict";
var MainClient = function() {
	var _gthis = this;
	$(window.document).ready(function() {
		console.log("MainClient document ready!");
		if(window.location.href.indexOf("localhost") != -1) {
			_gthis.url = "http://localhost:" + "5000";
		} else {
			_gthis.url = "https://skeletor.herokuapp.com/";
		}
		console.log("body.id : " + window.document.body.id);
		_gthis.init();
	});
};
MainClient.main = function() {
	var main = new MainClient();
};
MainClient.prototype = {
	init: function() {
		this.initVue();
		this.initSocket();
	}
	,initVue: function() {
		this.loading = new Vue({ el : "#loading", data : { showloading : true}});
		this.app = new Vue({ el : "#app", data : { message : "Hello Vue.js!"}});
		if(window.document.getElementById("example-1") != null) {
			this.example1 = new Vue({ el : "#example-1", data : { items : [{ message : "Foo"},{ message : "Bar"}]}});
		}
		if(window.document.getElementById("example-2") != null) {
			this.example2 = new Vue({ el : "#example-2", data : { items : [{ message : "1Foo"},{ message : "2Bar"}]}});
		}
		Vue.component("todo-item",{ props : ["todo"], template : "<li>{{ todo.text }}</li>"});
		Vue.component("reaction-item",{ props : ["react"], template : "<span class=\"badge badge-primary bigger-badge\">{{ react.name }} {{ react.count }}</span>"});
		var app7 = new Vue({ el : "#app-7", data : { groceryList : [{ id : 0, text : "Vegetables"},{ id : 1, text : "Cheese"},{ id : 2, text : "Whatever else humans are supposed to eat"}], reactions : [{ "name" : "+1", "users" : ["U2XFA5KM4","U02BA6Q72"], "count" : 2},{ "name" : "-1", "users" : ["U2XFA5KM4"], "count" : 1}]}, computed : { totalMarks : function() {
			var total = 100;
			return total;
		}}});
	}
	,initSocket: function() {
		var _gthis = this;
		this.socket = io.connect(this.url);
		this.socket.on("message",function(data) {
			console.log("" + JSON.stringify(data));
			_gthis.app.$data.message = data.message;
		});
		this.socket.on("channels",function(data1) {
		});
		this.socket.on("list.update",function(data2) {
			console.log("list.update :: " + data2);
		});
		this.socket.on("list",function(data3) {
			console.log("" + JSON.stringify(data3));
			var json = data3;
			var arr = [];
			var _g = 0;
			while(_g < json.length) {
				var link = json[_g];
				++_g;
				console.log(link);
				arr.push(link);
			}
			_gthis.example2.$data.items = arr;
			_gthis.loading.$data.showloading = false;
		});
		this.socket.on("test:ping",function(data4) {
			console.log("test:ping");
			_gthis.showSnackbar("test:ping :: " + data4);
		});
	}
	,showSnackbar: function(msg) {
		var x = window.document.getElementById("snackbar");
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "snackbar";
			window.document.body.appendChild(div);
			x = div;
		}
		x.innerText = msg;
		x.className = "show";
		setTimeout(function() {
			x.className = x.className.replace("show","");
		},3000);
	}
};
MainClient.main();
})();

//# sourceMappingURL=client.js.map